= form_with(model: snack, data: { turbo_frame: "_top" }, class: "needs-validation") do |form|
  - if snack.errors.any?
    .alert.alert-danger
      %h4.mb-2= "#{pluralize(snack.errors.count, 'error')} prohibited this snack from being saved:"
      %ul.mb-0
        - snack.errors.each do |error|
          %li= error.full_message

  - if snack.new_record?
    .mb-3
      = form.label :existing_snack_id, "Select an existing snack", class: "fw-bold h6"
      = form.collection_select :existing_snack_id, @available_snacks, :id, :name,
          { include_blank: "— Create a new snack instead —" },
          { class: "form-select", id: "existing-snack-select" }

    %hr

  #new-snack-fields
    .fw-bold.h6= snack.new_record? ? "Or create a new snack" : "Edit snack details:"
    .mb-3
      = form.label :name, class: "form-label"
      = form.text_field :name, class: "form-control", placeholder: "Enter snack name"

    .mb-3
      = form.label :description, class: "form-label"
      = form.text_area :description, class: "form-control", rows: 4, placeholder: "Describe this snack"

    .mb-3
      = form.label :flavor_ids, "Flavors", class: "form-label"
      = form.collection_select :flavor_ids, Flavor.all, :id, :name,
        { selected: snack.flavor_ids, include_blank: false },
        { multiple: true, class: "form-select", id: "flavor-select" }

  .d-flex.justify-content-end
    = form.submit "Save Snack", class: "btn btn-primary"


:javascript
  document.addEventListener("turbo:frame-load", function() {
    console.log("FORM LOADING TIME")
    new TomSelect("#flavor-select", {
      plugins: ['remove_button'],
      placeholder: "Select flavors...",
      persist: false,
      create: false,
      closeAfterSelect: false,
      allowEmptyOption: false
    });

    const existingSelect = document.getElementById("existing-snack-select");
    const newSnackFields = document.getElementById("new-snack-fields");

    function toggleNewSnackFields() {
      if (existingSelect?.value) {
        newSnackFields.style.display = "none";
      } else {
        newSnackFields.style.display = "";
      }
    }

    if (existingSelect) {
      existingSelect.addEventListener("change", toggleNewSnackFields);
    }
    toggleNewSnackFields();

  })
